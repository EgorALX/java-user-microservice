openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
servers:
  - url: /api/v1/users
paths:
  /users:
    get:
      summary: Получение информации о пользователях с применением фильтрации
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: surname
          in: query
          schema:
            type: string
        - name: registrationDate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: object
            properties:
              size:
                type: integer
              number:
                type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        '400':
          description: Bad request
        '404':
          description: Not found
    post:
      summary: Создание нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Bad request
        '409':
          description: Conflict
  /users/{userId}:
    get:
      summary: Получение информации о конкретном пользователе по ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: Not found
    patch:
      summary: Обновление информации о конкретном пользователе
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: Not found
    delete:
      summary: Удаление информации о конкретном пользователе по ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not found
components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        registrationDate:
          type: string
          format: date
        email:
          type: string
    NewUserDto:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        registrationDate:
          type: string
          format: date
        email:
          type: string
    UpdateUserDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        registrationDate:
          type: string
          format: date
        email:
          type: string
